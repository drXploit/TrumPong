<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creation code
global.score = 0;
global.hits   = 0;
global.missed = 0;
global.fired  = 0;

global.level = 0;
global.difficulty = 1;

global.clickX = 0;
global.clickY = 0;

global.start = false;

global.roomnumber = 0;

global.tension = 0;


audio_play_sound(bck_snd,9,true);

draw_set_font(font_main);
draw_set_color(c_white);
draw_set_halign(fa_center);
draw_set_valign(fa_center);

window_set_cursor(cr_cross);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Center the browser

if browser_height &gt; window_get_height() || browser_width &gt; window_get_width()
{
var xx, yy;
if browser_width &gt; window_get_width()
   {
   xx = (browser_width - window_get_width()) / 2;
   }
else
   {
   xx = 0;
   }
if browser_height &gt; window_get_height()
   {
   yy = (browser_height - window_get_height()) / 2;
   }
else
   {
   yy = 0;
   }
window_set_position(xx, yy);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Room end - destroy disposable objs
if (instance_exists(obj_enemy))
{
    with (obj_enemy)
    {
        instance_destroy();
    }
}
if (instance_exists(obj_wall))
{
    with (obj_wall)
    {
        instance_destroy();
    }
}
if (instance_exists(obj_begin))
{
    with (obj_begin)
    {
        instance_destroy();
    }
}
if (instance_exists(obj_knife))
{
    with (obj_knife)
    {
        instance_destroy();
    }
}
if (instance_exists(obj_explosion))
{
    with (obj_explosion)
    {
        instance_destroy();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set orientation hopefully
if (isPortrait())
{
    view_hview[0] = 1024;
    view_wview[0] = 768;   
    view_hport[0] = 568;
    view_wport[0] = 320;

}
else
{
    view_wview[0] = 1024;
    view_hview[0] = 768;
    view_hport[0] = 320;
    view_wport[0] = 568;
}

window_set_rectangle(0, 0, display_get_width(), display_get_height()); 

if (room == rm_start)
{
//    instance_deactivate_object(obj_player);
 //   if (instance_exists(obj_player)) obj_player.visible = false;
    if (instance_exists(obj_knife_hand)) obj_knife_hand.visible = false;
}
else
{
//    instance_activate_object(obj_player);
  //  if (instance_exists(obj_player)) obj_player.visible = true;
    if (instance_exists(obj_knife_hand)) obj_knife_hand.visible = true;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw important stuff
draw_set_alpha(0.8);
draw_set_color(c_black);
draw_rectangle(0,  sprite_get_height(spr_wall)/3,sprite_get_width(spr_wall)*2,sprite_get_height(spr_wall)*(2/3),false);
draw_rectangle(64*3,sprite_get_height(spr_wall)/3,(64*3)+sprite_get_width(spr_wall)*2,sprite_get_height(spr_wall)*(2/3),false);
draw_rectangle(64*6,sprite_get_height(spr_wall)/3,(64*6)+sprite_get_width(spr_wall)*2,sprite_get_height(spr_wall)*(2/3),false);
draw_rectangle(64*9,sprite_get_height(spr_wall)/3,(64*9)+sprite_get_width(spr_wall)*3,sprite_get_height(spr_wall)*(2/3),false);

draw_set_alpha(1);
draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_set_color(c_yellow);
draw_text((sprite_get_width(spr_wall)/2)+20,sprite_get_height(spr_wall)/2,"Score:"+string(global.score));
draw_text((64*3)+sprite_get_width(spr_wall),sprite_get_height(spr_wall)/2,"Hits:"+string(global.hits));
draw_text((64*6)+sprite_get_width(spr_wall),sprite_get_height(spr_wall)/2,"Misses:"+string(global.missed));
draw_text((64*9)+sprite_get_width(spr_wall)+10,sprite_get_height(spr_wall)/2,"Tries:"+string(global.fired));

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
